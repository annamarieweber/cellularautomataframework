{
    "sourceFile": "src/input/README",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 18,
            "patches": [
                {
                    "date": 1639711756763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1639711841989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n # \n # Creator: Joyce Kim Graduate Student\n # Date Created: Dec 3, 2021\n #\n-This is directory where all input cellular automata implementations in  C++ are commpiled.\n+This is directory where all input cellular automata implementation in  C++ are compiled.\n Tests of these math functions and procedures are in the ../tests subdirectory. These insertion sort function is also used inside programs in other src directory files.\n \n PATH ROOT_DIR/src/mergesort2/.\n   Files:\n"
                },
                {
                    "date": 1639711853967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,10 @@\n # \n # Creator: Joyce Kim Graduate Student\n # Date Created: Dec 3, 2021\n #\n-This is directory where all input cellular automata implementation in  C++ are compiled.\n-Tests of these math functions and procedures are in the ../tests subdirectory. These insertion sort function is also used inside programs in other src directory files.\n+This is directory where all input cellular automata implementation in C++ are compiled.\n+Tests of the input cellular automata functions and procedures are in the ../tests subdirectory. These insertion sort function is also used inside programs in other src directory files.\n \n PATH ROOT_DIR/src/mergesort2/.\n   Files:\n \t- README: this file with a general description of the math library and objects subdirectory\n"
                },
                {
                    "date": 1639711861709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n # Creator: Joyce Kim Graduate Student\n # Date Created: Dec 3, 2021\n #\n This is directory where all input cellular automata implementation in C++ are compiled.\n-Tests of the input cellular automata functions and procedures are in the ../tests subdirectory. These insertion sort function is also used inside programs in other src directory files.\n+Tests of the input cellular automata functions and procedures are in the ../tests subdirectory. These function is also used inside programs in other src directory files.\n \n PATH ROOT_DIR/src/mergesort2/.\n   Files:\n \t- README: this file with a general description of the math library and objects subdirectory\n"
                },
                {
                    "date": 1639711868786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n #\n This is directory where all input cellular automata implementation in C++ are compiled.\n Tests of the input cellular automata functions and procedures are in the ../tests subdirectory. These function is also used inside programs in other src directory files.\n \n-PATH ROOT_DIR/src/mergesort2/.\n+PATH ROOT_DIR/src/input/.\n   Files:\n \t- README: this file with a general description of the math library and objects subdirectory\n \n \t- Makefile: a makefile that can generate all objects and libraries associated with insertion sort function\n"
                },
                {
                    "date": 1639711903602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,11 +8,11 @@\n Tests of the input cellular automata functions and procedures are in the ../tests subdirectory. These function is also used inside programs in other src directory files.\n \n PATH ROOT_DIR/src/input/.\n   Files:\n-\t- README: this file with a general description of the math library and objects subdirectory\n+\t- README: this file with a general description of the library and objects subdirectory\n \n-\t- Makefile: a makefile that can generate all objects and libraries associated with insertion sort function\n+\t- Makefile: a makefile that can generate all objects and libraries associated with cellular automata function\n \t            (e.g. insertion sort). The make file can also clean all math objects in the ../../lib directory\n \t\t    shell> make cleanall\n \t\t    or create all the utilities objects\n \t\t    shell> make all\n"
                },
                {
                    "date": 1639711913764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n   Files:\n \t- README: this file with a general description of the library and objects subdirectory\n \n \t- Makefile: a makefile that can generate all objects and libraries associated with cellular automata function\n-\t            (e.g. insertion sort). The make file can also clean all math objects in the ../../lib directory\n+\t            (e.g. ). The make file can also clean all math objects in the ../../lib directory\n \t\t    shell> make cleanall\n \t\t    or create all the utilities objects\n \t\t    shell> make all\n \t\t\n"
                },
                {
                    "date": 1639711922196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n   Files:\n \t- README: this file with a general description of the library and objects subdirectory\n \n \t- Makefile: a makefile that can generate all objects and libraries associated with cellular automata function\n-\t            (e.g. ). The make file can also clean all math objects in the ../../lib directory\n+\t            (e.g. cellular automata input). The make file can also clean all math objects in the ../../lib directory\n \t\t    shell> make cleanall\n \t\t    or create all the utilities objects\n \t\t    shell> make all\n \t\t\n"
                },
                {
                    "date": 1639711929950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n PATH ROOT_DIR/src/input/.\n   Files:\n \t- README: this file with a general description of the library and objects subdirectory\n \n-\t- Makefile: a makefile that can generate all objects and libraries associated with cellular automata function\n+\t- Makefile: a makefile that can generate all objects and libraries associated with input cellular automata function\n \t            (e.g. cellular automata input). The make file can also clean all math objects in the ../../lib directory\n \t\t    shell> make cleanall\n \t\t    or create all the utilities objects\n \t\t    shell> make all\n"
                },
                {
                    "date": 1639711940822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,11 +8,11 @@\n Tests of the input cellular automata functions and procedures are in the ../tests subdirectory. These function is also used inside programs in other src directory files.\n \n PATH ROOT_DIR/src/input/.\n   Files:\n-\t- README: this file with a general description of the library and objects subdirectory\n+\t- README: this file with a general description of the input services library and objects subdirectory\n \n-\t- Makefile: a makefile that can generate all objects and libraries associated with input cellular automata function\n+\t- Makefile: a makefile that can generate all objects and libraries associated with input cellular automata functions\n \t            (e.g. cellular automata input). The make file can also clean all math objects in the ../../lib directory\n \t\t    shell> make cleanall\n \t\t    or create all the utilities objects\n \t\t    shell> make all\n"
                },
                {
                    "date": 1639711949397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n Tests of the input cellular automata functions and procedures are in the ../tests subdirectory. These function is also used inside programs in other src directory files.\n \n PATH ROOT_DIR/src/input/.\n   Files:\n-\t- README: this file with a general description of the input services library and objects subdirectory\n+\t- README: this file with a general description of the input services library and objects subdirectory for the cellular automata\n \n \t- Makefile: a makefile that can generate all objects and libraries associated with input cellular automata functions\n \t            (e.g. cellular automata input). The make file can also clean all math objects in the ../../lib directory\n \t\t    shell> make cleanall\n"
                },
                {
                    "date": 1639711956026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n   Files:\n \t- README: this file with a general description of the input services library and objects subdirectory for the cellular automata\n \n \t- Makefile: a makefile that can generate all objects and libraries associated with input cellular automata functions\n-\t            (e.g. cellular automata input). The make file can also clean all math objects in the ../../lib directory\n+\t            (e.g. cellular automata input). The make file can also clean all cellular objects in the ../../lib directory\n \t\t    shell> make cleanall\n \t\t    or create all the utilities objects\n \t\t    shell> make all\n \t\t\n"
                },
                {
                    "date": 1639711964315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,12 +8,12 @@\n Tests of the input cellular automata functions and procedures are in the ../tests subdirectory. These function is also used inside programs in other src directory files.\n \n PATH ROOT_DIR/src/input/.\n   Files:\n-\t- README: this file with a general description of the input services library and objects subdirectory for the cellular automata\n+\t- README: this file with a general description of the input services library and objects subdirectory for the cellular\n \n \t- Makefile: a makefile that can generate all objects and libraries associated with input cellular automata functions\n-\t            (e.g. cellular automata input). The make file can also clean all cellular objects in the ../../lib directory\n+\t            (e.g. cellular automata input). The make file can also clean all math objects in the ../../lib directory\n \t\t    shell> make cleanall\n \t\t    or create all the utilities objects\n \t\t    shell> make all\n \t\t\n"
                },
                {
                    "date": 1639711971451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n Tests of the input cellular automata functions and procedures are in the ../tests subdirectory. These function is also used inside programs in other src directory files.\n \n PATH ROOT_DIR/src/input/.\n   Files:\n-\t- README: this file with a general description of the input services library and objects subdirectory for the cellular\n+\t- README: this file with a general description of the input services library and objects subdirectory for the cellular automata \n \n \t- Makefile: a makefile that can generate all objects and libraries associated with input cellular automata functions\n \t            (e.g. cellular automata input). The make file can also clean all math objects in the ../../lib directory\n \t\t    shell> make cleanall\n"
                },
                {
                    "date": 1639711983124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n   Files:\n \t- README: this file with a general description of the input services library and objects subdirectory for the cellular automata \n \n \t- Makefile: a makefile that can generate all objects and libraries associated with input cellular automata functions\n-\t            (e.g. cellular automata input). The make file can also clean all math objects in the ../../lib directory\n+\t            (e.g. cellular automata input). The make file can also clean all input cellular automata objects in the ../../lib directory\n \t\t    shell> make cleanall\n \t\t    or create all the utilities objects\n \t\t    shell> make all\n \t\t\n"
                },
                {
                    "date": 1639711991912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,6 +16,6 @@\n \t\t    shell> make cleanall\n \t\t    or create all the utilities objects\n \t\t    shell> make all\n \t\t\n-\t\t - mergesort2.cxx: implements merge sort algorithm recursively splitting the array into 2 parts, where it is sorted and merged. 3-way merge sort splits the array into into 3 parts. It recursively breaks down the arrays to subarrays of size one half. It divides the input array into two halves, and sorts  two halves subarrays, and then merges the two sorted halves.\n+\t\t - CA_input.cxx: implements merge sort algorithm recursively splitting the array into 2 parts, where it is sorted and merged. 3-way merge sort splits the array into into 3 parts. It recursively breaks down the arrays to subarrays of size one half. It divides the input array into two halves, and sorts  two halves subarrays, and then merges the two sorted halves.\n \n"
                },
                {
                    "date": 1639712207252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,6 +16,9 @@\n \t\t    shell> make cleanall\n \t\t    or create all the utilities objects\n \t\t    shell> make all\n \t\t\n-\t\t - CA_input.cxx: implements merge sort algorithm recursively splitting the array into 2 parts, where it is sorted and merged. 3-way merge sort splits the array into into 3 parts. It recursively breaks down the arrays to subarrays of size one half. It divides the input array into two halves, and sorts  two halves subarrays, and then merges the two sorted halves.\n-\n+\t\t - CA_input.cxx: CA_input.cxx: contains functions with a grid with some cells \n+ which may be alive or dead. It generates the next generation of \n+ cells based on these rules: live cell with less than two live neighbors dies, live cell with \n+ two or three live neighbors lives on to the next generation, live cell with more than three live neighbors dies\n+ and any dead cell with exactly three live neighbors becomes a live cell(reproduction).\n"
                },
                {
                    "date": 1639712214570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,8 @@\n \t\t    shell> make cleanall\n \t\t    or create all the utilities objects\n \t\t    shell> make all\n \t\t\n-\t\t - CA_input.cxx: CA_input.cxx: contains functions with a grid with some cells \n- which may be alive or dead. It generates the next generation of \n+\t\t - CA_input.cxx:  contains functions with a grid with some cells which may be alive or dead. It generates the next generation of \n  cells based on these rules: live cell with less than two live neighbors dies, live cell with \n  two or three live neighbors lives on to the next generation, live cell with more than three live neighbors dies\n  and any dead cell with exactly three live neighbors becomes a live cell(reproduction).\n"
                },
                {
                    "date": 1639712221972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,5 @@\n \t\t    shell> make cleanall\n \t\t    or create all the utilities objects\n \t\t    shell> make all\n \t\t\n-\t\t - CA_input.cxx:  contains functions with a grid with some cells which may be alive or dead. It generates the next generation of \n- cells based on these rules: live cell with less than two live neighbors dies, live cell with \n- two or three live neighbors lives on to the next generation, live cell with more than three live neighbors dies\n- and any dead cell with exactly three live neighbors becomes a live cell(reproduction).\n+\t\t - CA_input.cxx:  contains functions with a grid with some cells which may be alive or dead. It generates the next generation of cells based on these rules: live cell with less than two live neighbors dies, live cell with two or three live neighbors lives on to the next generation, live cell with more than three live neighbors dies and any dead cell with exactly three live neighbors becomes a live cell(reproduction).\n"
                }
            ],
            "date": 1639711756763,
            "name": "Commit-0",
            "content": "# for MSSE Chem 274B - Fall Semester\n# University of California, Berkeley\n# \n# Creator: Joyce Kim Graduate Student\n# Date Created: Dec 3, 2021\n#\nThis is directory where all input cellular automata implementations in  C++ are commpiled.\nTests of these math functions and procedures are in the ../tests subdirectory. These insertion sort function is also used inside programs in other src directory files.\n\nPATH ROOT_DIR/src/mergesort2/.\n  Files:\n\t- README: this file with a general description of the math library and objects subdirectory\n\n\t- Makefile: a makefile that can generate all objects and libraries associated with insertion sort function\n\t            (e.g. insertion sort). The make file can also clean all math objects in the ../../lib directory\n\t\t    shell> make cleanall\n\t\t    or create all the utilities objects\n\t\t    shell> make all\n\t\t\n\t\t - mergesort2.cxx: implements merge sort algorithm recursively splitting the array into 2 parts, where it is sorted and merged. 3-way merge sort splits the array into into 3 parts. It recursively breaks down the arrays to subarrays of size one half. It divides the input array into two halves, and sorts  two halves subarrays, and then merges the two sorted halves.\n\n"
        }
    ]
}